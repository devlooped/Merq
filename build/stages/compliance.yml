# Compliance Stage

stages:
- stage : Compliance
  dependsOn: Build
  condition: eq(stageDependencies.Build.outputs['Windows.SetComplianceNeed.Xamarin.ComplianceEnabled'], 'true')
  jobs:
   - job: CodeAnalysis
     displayName: Security & Analysis
     pool: $(WindowsPoolName)
     timeoutInMinutes: 60
     cancelTimeoutInMinutes: 5 
     steps:
     - checkout: self
       clean: true
       submodules: recursive
     - task: DownloadBuildArtifacts@0
       displayName: Download Symbols
       inputs:
        artifactName: symbols
        downloadPath: '$(Build.ArtifactStagingDirectory)'
     - task: AntiMalware@3
       displayName: Run AntiMalware Scan
       inputs:
        FileDirPath: $(System.DefaultWorkingDirectory)
        EnableServices: true
       continueOnError: true
       condition: succeededOrFailed()
     - task: BinSkim@3
       displayName: Run BinSkim Analysis
       inputs:
        InputType: Basic
        AnalyzeTarget: '$(Build.ArtifactStagingDirectory)\artifacts\*.dll'
        AnalyzeVerbose: true
       continueOnError: true
       condition: succeededOrFailed()
     - template: security\credscan\v2.yml@templates # from xamarin/yaml-templates repository
       parameters:
        suppressionsFile: $(System.DefaultWorkingDirectory)\build\CredScanSuppressions.json
     - template: security\policheck\v1.yml@templates # from xamarin/yaml-templates repository
       parameters:
        exclusionFile: $(System.DefaultWorkingDirectory)\build\PoliCheckExclusions.xml
     - task: CodeInspector@2
       displayName: Run Code Inspector Analysis
       inputs:
        ProductId: '$(System.TeamProjectId)'
       continueOnError: true
       condition: succeededOrFailed()
     - template: security\publish-report\v1.yml@templates # from xamarin/yaml-templates repository
       parameters:
        ArtifactName: ComplianceLogs
     - task: PostAnalysis@1
       displayName: Run Security Post Analysis
       inputs:
          AntiMalware: true
          BinSkim: true
          CredScan: true
          PoliCheck: true
          CodeInspector: true
       continueOnError: true
       condition: succeededOrFailed()
     - task: TSAUpload@1
       inputs:
          tsaVersion: 'TsaV2'
          codebase: 'NewOrUpdate'
          tsaEnvironment: 'PROD'
          codeBaseName: 'merq_main'
          notificationAlias: 'xvs@microsoft.com,maagno@microsoft.com,emafern@microsoft.com'
          notifyAlwaysV2: false
          codeBaseAdmins: 'REDMOND\maagno;REDMOND\emafern;REDMOND\vsengxamarin'
          instanceUrlForTsaV2: 'DEVDIV'
          projectNameDEVDIV: 'DevDiv'
          areaPath: 'DevDiv\VS Client - Tools\Platform\Xamarin VS'
          iterationPath: 'DevDiv'
          uploadBinSkim: true
          uploadCredScan: true
          uploadPoliCheck: true
          uploadAsync: true
       condition: succeededOrFailed()
